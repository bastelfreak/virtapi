-- MySQL Script generated by MySQL Workbench
-- Fr 19 Jun 2015 19:00:08 CEST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema virtapi
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `virtapi` ;

-- -----------------------------------------------------
-- Schema virtapi
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `virtapi` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
USE `virtapi` ;

-- -----------------------------------------------------
-- Table `virtapi`.`cache_option`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `virtapi`.`cache_option` ;

CREATE TABLE IF NOT EXISTS `virtapi`.`cache_option` (
  `id` INT(11) NOT NULL AUTO_INCREMENT COMMENT '',
  `cache_type` VARCHAR(255) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL COMMENT '',
  `description` VARCHAR(255) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE UNIQUE INDEX `cache_type_UNIQUE` ON `virtapi`.`cache_option` (`cache_type` ASC)  COMMENT '';

CREATE UNIQUE INDEX `description_UNIQUE` ON `virtapi`.`cache_option` (`description` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `virtapi`.`node_state`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `virtapi`.`node_state` ;

CREATE TABLE IF NOT EXISTS `virtapi`.`node_state` (
  `id` INT(11) NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(32) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL COMMENT '',
  `description` VARCHAR(255) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE UNIQUE INDEX `state_name_UNIQUE` ON `virtapi`.`node_state` (`name` ASC)  COMMENT '';

CREATE UNIQUE INDEX `description_UNIQUE` ON `virtapi`.`node_state` (`description` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `virtapi`.`node`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `virtapi`.`node` ;

CREATE TABLE IF NOT EXISTS `virtapi`.`node` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `ipv4_addr_ext` BINARY(4) NOT NULL COMMENT '',
  `ipv6_addr_ext` BINARY(16) NOT NULL COMMENT '',
  `ipv4_gw_ext` BINARY(4) NOT NULL COMMENT '',
  `ipv6_gw_ext` BINARY(16) NOT NULL COMMENT '',
  `bond_interfaces` VARCHAR(255) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL COMMENT '',
  `fqdn` VARCHAR(255) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL COMMENT '',
  `location` VARCHAR(255) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL COMMENT '',
  `state_id` INT(11) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  CONSTRAINT `fk_node_1`
    FOREIGN KEY (`state_id`)
    REFERENCES `virtapi`.`node_state` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE UNIQUE INDEX `ipv4_addr_ext` ON `virtapi`.`node` (`ipv4_addr_ext` ASC, `ipv6_addr_ext` ASC)  COMMENT '';

CREATE INDEX `fk_state_id_node` ON `virtapi`.`node` (`state_id` ASC)  COMMENT '';

CREATE UNIQUE INDEX `ipv4_addr_ext_UNIQUE` ON `virtapi`.`node` (`ipv4_addr_ext` ASC)  COMMENT '';

CREATE UNIQUE INDEX `ipv6_addr_ext_UNIQUE` ON `virtapi`.`node` (`ipv6_addr_ext` ASC)  COMMENT '';

CREATE UNIQUE INDEX `FQDN_UNIQUE` ON `virtapi`.`node` (`fqdn` ASC)  COMMENT '';

CREATE UNIQUE INDEX `location_UNIQUE` ON `virtapi`.`node` (`location` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `virtapi`.`vm_state`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `virtapi`.`vm_state` ;

CREATE TABLE IF NOT EXISTS `virtapi`.`vm_state` (
  `id` INT(11) NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(32) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL COMMENT '',
  `description` VARCHAR(255) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE UNIQUE INDEX `description_UNIQUE` ON `virtapi`.`vm_state` (`description` ASC)  COMMENT '';

CREATE UNIQUE INDEX `state_name_UNIQUE` ON `virtapi`.`vm_state` (`name` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `virtapi`.`virt_node`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `virtapi`.`virt_node` ;

CREATE TABLE IF NOT EXISTS `virtapi`.`virt_node` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `local_storage_gb` INT NULL COMMENT '',
  `vg_name` VARCHAR(45) NULL COMMENT '',
  `local_storage_path` VARCHAR(45) NULL COMMENT '',
  `node_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  CONSTRAINT `fk_vm_node_1`
    FOREIGN KEY (`node_id`)
    REFERENCES `virtapi`.`node` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `node_id_UNIQUE` ON `virtapi`.`virt_node` (`node_id` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `virtapi`.`virt_method`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `virtapi`.`virt_method` ;

CREATE TABLE IF NOT EXISTS `virtapi`.`virt_method` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `virtapi`.`virt_method` (`name` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `virtapi`.`node_method`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `virtapi`.`node_method` ;

CREATE TABLE IF NOT EXISTS `virtapi`.`node_method` (
  `id` INT NOT NULL COMMENT '',
  `virt_method_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `virt_node_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  CONSTRAINT `fk_vm_hypervisor_1`
    FOREIGN KEY (`virt_node_id`)
    REFERENCES `virtapi`.`virt_node` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vm_hypervisor_2`
    FOREIGN KEY (`virt_method_id`)
    REFERENCES `virtapi`.`virt_method` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_node_id_vm_hypervisor` ON `virtapi`.`node_method` (`virt_node_id` ASC)  COMMENT '';

CREATE UNIQUE INDEX `unique_ids` ON `virtapi`.`node_method` (`virt_method_id` ASC, `virt_node_id` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `virtapi`.`vm`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `virtapi`.`vm` ;

CREATE TABLE IF NOT EXISTS `virtapi`.`vm` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `cores` INT NOT NULL COMMENT '',
  `ram` INT NOT NULL COMMENT '',
  `customer_id` INT NOT NULL COMMENT '',
  `cputime_limit` INT NULL COMMENT '',
  `uuid` VARCHAR(36) NOT NULL COMMENT '',
  `node_method_id` INT NOT NULL COMMENT '',
  `state_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  CONSTRAINT `fk_vm_2`
    FOREIGN KEY (`state_id`)
    REFERENCES `virtapi`.`vm_state` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vm_1`
    FOREIGN KEY (`node_method_id`)
    REFERENCES `virtapi`.`node_method` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE INDEX `fk_state_id_vm` ON `virtapi`.`vm` (`state_id` ASC)  COMMENT '';

CREATE INDEX `fk_vm_hypervisor_id_vm` ON `virtapi`.`vm` (`node_method_id` ASC)  COMMENT '';

CREATE UNIQUE INDEX `uuid_UNIQUE` ON `virtapi`.`vm` (`uuid` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `virtapi`.`storage_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `virtapi`.`storage_type` ;

CREATE TABLE IF NOT EXISTS `virtapi`.`storage_type` (
  `id` INT(11) NOT NULL AUTO_INCREMENT COMMENT '',
  `storage_type` VARCHAR(255) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL COMMENT '',
  `description` VARCHAR(255) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE UNIQUE INDEX `storage_type_UNIQUE` ON `virtapi`.`storage_type` (`storage_type` ASC)  COMMENT '';

CREATE UNIQUE INDEX `description_UNIQUE` ON `virtapi`.`storage_type` (`description` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `virtapi`.`storage`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `virtapi`.`storage` ;

CREATE TABLE IF NOT EXISTS `virtapi`.`storage` (
  `id` INT(11) NOT NULL AUTO_INCREMENT COMMENT '',
  `size` INT(11) NOT NULL COMMENT '',
  `vm_id` INT NULL COMMENT '',
  `write_iops_limit` INT NULL COMMENT '',
  `read_iops_limit` INT NULL COMMENT '',
  `write_mbps_limit` INT NULL COMMENT '',
  `read_mbps_limit` INT NULL COMMENT '',
  `cache_option_id` INT(11) NOT NULL COMMENT '',
  `storage_type_id` INT(11) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  CONSTRAINT `fk_storage_vm`
    FOREIGN KEY (`vm_id`)
    REFERENCES `virtapi`.`vm` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_storage_cache_option`
    FOREIGN KEY (`cache_option_id`)
    REFERENCES `virtapi`.`cache_option` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_storage_storage_type`
    FOREIGN KEY (`storage_type_id`)
    REFERENCES `virtapi`.`storage_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE INDEX `fk_vm_id` ON `virtapi`.`storage` (`vm_id` ASC)  COMMENT '';

CREATE INDEX `fk_cache_option_id_storage` ON `virtapi`.`storage` (`cache_option_id` ASC)  COMMENT '';

CREATE INDEX `fk_storage_type_id_storage` ON `virtapi`.`storage` (`storage_type_id` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `virtapi`.`vm_interface`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `virtapi`.`vm_interface` ;

CREATE TABLE IF NOT EXISTS `virtapi`.`vm_interface` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `mac` VARCHAR(45) NOT NULL COMMENT '',
  `vm_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  CONSTRAINT `fk_vm_interface_1`
    FOREIGN KEY (`vm_id`)
    REFERENCES `virtapi`.`vm` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_vm_id_vm_interface` ON `virtapi`.`vm_interface` (`vm_id` ASC)  COMMENT '';

CREATE UNIQUE INDEX `mac_UNIQUE` ON `virtapi`.`vm_interface` (`mac` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `virtapi`.`ipv4`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `virtapi`.`ipv4` ;

CREATE TABLE IF NOT EXISTS `virtapi`.`ipv4` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `ip` BINARY(4) NOT NULL COMMENT '',
  `vm_interface_id` INT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  CONSTRAINT `fk_ipv4_1`
    FOREIGN KEY (`vm_interface_id`)
    REFERENCES `virtapi`.`vm_interface` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_vm_interface_id_ipv4` ON `virtapi`.`ipv4` (`vm_interface_id` ASC)  COMMENT '';

CREATE UNIQUE INDEX `ip_UNIQUE` ON `virtapi`.`ipv4` (`ip` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `virtapi`.`ipv6`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `virtapi`.`ipv6` ;

CREATE TABLE IF NOT EXISTS `virtapi`.`ipv6` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `ip` BINARY(16) NOT NULL COMMENT '',
  `vm_interface_id` INT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  CONSTRAINT `fk_ipv6_1`
    FOREIGN KEY (`vm_interface_id`)
    REFERENCES `virtapi`.`vm_interface` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_vm_interface_id_ipv4` ON `virtapi`.`ipv6` (`vm_interface_id` ASC)  COMMENT '';

CREATE UNIQUE INDEX `ip_UNIQUE` ON `virtapi`.`ipv6` (`ip` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `virtapi`.`ceph_pool`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `virtapi`.`ceph_pool` ;

CREATE TABLE IF NOT EXISTS `virtapi`.`ceph_pool` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `virtapi`.`ceph_pool` (`name` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `virtapi`.`storage_ceph`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `virtapi`.`storage_ceph` ;

CREATE TABLE IF NOT EXISTS `virtapi`.`storage_ceph` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `storage_id` INT NOT NULL COMMENT '',
  `discard` TINYINT(1) NOT NULL DEFAULT 1 COMMENT '',
  `pool_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  CONSTRAINT `fk_storage_ceph_1`
    FOREIGN KEY (`pool_id`)
    REFERENCES `virtapi`.`ceph_pool` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `storage_id_UNIQUE` ON `virtapi`.`storage_ceph` (`storage_id` ASC)  COMMENT '';

CREATE INDEX `fk_pool_id_storage_ceph` ON `virtapi`.`storage_ceph` (`pool_id` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `virtapi`.`vlan`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `virtapi`.`vlan` ;

CREATE TABLE IF NOT EXISTS `virtapi`.`vlan` (
  `id` INT NOT NULL COMMENT '',
  `tag` INT NOT NULL COMMENT '',
  `vm_interface_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  CONSTRAINT `fk_vlan_1`
    FOREIGN KEY (`vm_interface_id`)
    REFERENCES `virtapi`.`vm_interface` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_vm_interface_id_vlan` ON `virtapi`.`vlan` (`vm_interface_id` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `virtapi`.`ceph_osd_node`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `virtapi`.`ceph_osd_node` ;

CREATE TABLE IF NOT EXISTS `virtapi`.`ceph_osd_node` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `node_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  CONSTRAINT `fk_ceph_node_1`
    FOREIGN KEY (`node_id`)
    REFERENCES `virtapi`.`node` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `node_id_UNIQUE` ON `virtapi`.`ceph_osd_node` (`node_id` ASC)  COMMENT '';


-- -----------------------------------------------------
-- Table `virtapi`.`ceph_mon_node`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `virtapi`.`ceph_mon_node` ;

CREATE TABLE IF NOT EXISTS `virtapi`.`ceph_mon_node` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `port` INT NOT NULL COMMENT '',
  `node_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  CONSTRAINT `fk_ceph_mon_node_1`
    FOREIGN KEY (`node_id`)
    REFERENCES `virtapi`.`node` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_ceph_mon_node_1_idx` ON `virtapi`.`ceph_mon_node` (`node_id` ASC)  COMMENT '';

CREATE UNIQUE INDEX `node_id_UNIQUE` ON `virtapi`.`ceph_mon_node` (`node_id` ASC)  COMMENT '';

USE `virtapi` ;

-- -----------------------------------------------------
-- procedure create_node_state
-- -----------------------------------------------------

USE `virtapi`;
DROP procedure IF EXISTS `virtapi`.`create_node_state`;

DELIMITER $$
USE `virtapi`$$
CREATE PROCEDURE `create_node_state`()
BEGIN

DELETE FROM `node_state`;

ALTER TABLE `node_state` AUTO_INCREMENT = 1;

INSERT INTO `node_state` 
	(`name`, `description`) 
VALUES 
	('stopped', 'node is stopped'),
	('running', 'node is running');
    
END ;$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure create_nodes
-- -----------------------------------------------------

USE `virtapi`;
DROP procedure IF EXISTS `virtapi`.`create_nodes`;

DELIMITER $$
USE `virtapi`$$
CREATE PROCEDURE `create_nodes`(IN count INT)
BEGIN
	DECLARE i INT DEFAULT 0;
	DECLARE ipv4 BINARY(4);
	DECLARE ipv6 BINARY(16);
	DECLARE ipv4_a INT DEFAULT 1;
    DECLARE ipv4_b INT DEFAULT 1;
    DECLARE ipv4_c INT DEFAULT 1;
    DECLARE ipv4_d INT DEFAULT 1;
    
    DELETE FROM `node`;
    ALTER TABLE `node` AUTO_INCREMENT = 1;

	WHILE i < count DO
		IF ipv4_d = 255 THEN
			SET ipv4_d = 1;			
            SET ipv4_c = ipv4_c + 1;
            
            IF ipv4_c = 255 THEN
				SET ipv4_c = 1;			
				SET ipv4_b = ipv4_b + 1;
                
                IF ipv4_b = 255 THEN
					SET ipv4_b = 1;			
					SET ipv4_a = ipv4_a + 1;           
				END IF;
			END IF;
		END IF;
        
        SET ipv4_d = ipv4_d + 1;
    
		SET ipv4 = CAST(INET6_ATON(CONCAT(ipv4_a,'.',ipv4_b,'.',ipv4_c,'.',ipv4_d)) AS BINARY(4));
SET ipv6 = CONCAT(ipv4_a,ipv4_b,ipv4_c,ipv4_d);
		
        INSERT INTO `node` 
			(`ipv4_addr_ext`, `ipv6_addr_ext`, `ipv4_gw_ext`, 
			 `ipv6_gw_ext`, `bond_interfaces`, `fqdn`, 
			 `location`, `state_id`) 
		VALUES 
			(ipv4, ipv6, ipv4, ipv6, CONCAT('enp', i), 
			 CONCAT('host', i,'.bastelfreak.net'), i, 1);		
                
        SET i = i + 1;
	END WHILE;
END ;$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure create_virt_nodes
-- -----------------------------------------------------

USE `virtapi`;
DROP procedure IF EXISTS `virtapi`.`create_virt_nodes`;

DELIMITER $$
USE `virtapi`$$
CREATE PROCEDURE `create_virt_nodes`(IN count INT)
BEGIN
DECLARE i INT DEFAULT 0;
WHILE i < 100 DO
  INSERT INTO `virt_node`
    (`local_storage_gb`, `local_storage_path`, `node_id`, `vg_name`)
  VALUES
    ('3200', '/var/lib/libvirt/images/',(SELECT `node`.`id` FROM `node` LEFT OUTER JOIN `virt_node` ON `node`.`id` = `virt_node`.`node_id` ORDER BY RAND() LIMIT 1) , 'vg0');
  SET i = i + 1;
END WHILE;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure create_virt_method
-- -----------------------------------------------------

USE `virtapi`;
DROP procedure IF EXISTS `virtapi`.`create_virt_method`;

DELIMITER $$
USE `virtapi`$$
CREATE PROCEDURE `create_virt_method`()
BEGIN

DELETE FROM `virt_method`;

ALTER TABLE `virt_method` AUTO_INCREMENT = 1;

INSERT INTO `virt_method` 
	(`name`) 
VALUES 
	('KVM'),
	('Docker'),
  ('Parallels Cloud Server'),
  ('Parallels Server Bare Metall'),
  ('systemd-nspawn');
    
END ;$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
